{"mappings":"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","sources":["src/js/modal.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'df3d71dc2c14b1899746da6d2afcfb5b';\n\nconst modalModule = (function () {\n  const movieModal = document.getElementById('movieModal');\n  const closeModalBtn = document.getElementById('closeModalBtn');\n  const modalContent = document.getElementById('modalContent');\n  const loaderContainer = document.getElementById('loaderContainer');\n  const contentEl = document.getElementById('content');\n\n  contentEl.addEventListener('click', openModal);\n\n  async function fetchMovieDataFromAPI(movieId) {\n    const apiEndpoint = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(apiEndpoint);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch movie data for ID ${movieId}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error(`Error fetching movie data: ${error.message}`);\n    }\n  }\n\n  function showLoader() {\n    loaderContainer.style.display = 'flex';\n  }\n\n  function hideLoader() {\n    loaderContainer.style.display = 'none';\n  }\n\n  function showModal(content) {\n    hideLoader();\n    modalContent.innerHTML = '';\n    modalContent.appendChild(content);\n    movieModal.style.display = 'block';\n  }\n\n  function hideModal() {\n    movieModal.style.display = 'none';\n  }\n\n  closeModalBtn.addEventListener('click', hideModal);\n\n  window.addEventListener('click', function (event) {\n    if (event.target === movieModal) {\n      hideModal();\n    }\n  });\n\n  window.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      hideModal();\n    }\n  });\n\n  async function openModal(event) {\n    event.preventDefault();\n\n    if (event.target.nodeName === 'IMG') {\n      showLoader();\n\n      const targetMovieLink = event.target.id;\n      console.log(targetMovieLink);\n      if (targetMovieLink) {\n        const movieId = targetMovieLink;\n\n        if (movieId) {\n          try {\n            const movieData = await fetchMovieDataFromAPI(movieId);\n            const content = document.createElement('div');\n            content.innerHTML = `<div class=\"modal-popup\">\n            <div class=\"movie-poster\">\n            <img src=\"${\n            movieData.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}`\n              : 'https://static.wikia.nocookie.net/ideas/images/6/66/FoxAndroidTM2%27s_No_Poster.jpg'\n              }\" alt=\"${movieData.title}\" class=\"modal-poster\" />\n            </div>\n            <div class=\"movie-details\">\n              <h2 class=\"title main-title\">${movieData.title}</h2>\n              <p><span class=\"categ\">Vote / Votes </span><span class=\"val\">${`${movieData.vote_average}`.padStart(0,'0')}</span></p>\n              <p><span class=\"categ\">Popularity</span><span class=\"val\">${  movieData.popularity}</span></p>\n              <p class=\"title\"><span class=\"categ\">Original Title</span><span class=\"val\">${movieData.title}</span></p>\n              <p><span class=\"categ\">Genre</span>${movieData.genres\n                .map(({ name }) => {\n                  return ` ${name}`;\n                })\n                .join(',').trim()}</span></p>\n              \n              <div class=\"abt\">\n              <p>ABOUT</p>\n              <p>${movieData.overview}</p>\n              </div>\n              <div class=\"button-div\">\n                <button class=\"modal-button btn-page\" data-watch=\"${movieData.id}\">ADD TO WATCHED</button>\n                <button class=\"modal-button btn-page\" data-queue=\"${movieData.id}\">ADD TO QUEUE</button>\n              </div>\n              </div>\n              </div>\n            `;\n            showModal(content);\n\n            const btnWatch = document.querySelector('button[data-watch]');\n            const btnQueue = document.querySelector('button[data-queue]');\n            const dataLoad = {\n              dataQueued:[],\n              dataWatched:[],\n            };\n\n            if(!localStorage.getItem('SAVED_CURRENT')){\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n            }\n            \n            btnWatch.addEventListener('click',(event)=>{\n              dataLoad.dataWatched.push(event.currentTarget.dataset.watch)\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n            })\n\n            btnQueue.addEventListener('click',(event)=>{\n              dataLoad.dataQueued.push(event.currentTarget.dataset.queue)\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n            });\n          } catch (error) {\n            console.error('Error fetching movie information:', error);\n          } finally {\n            hideLoader();\n          }\n        } else {\n          console.error('Movie ID is undefined.');\n          hideLoader();\n        }\n      }\n    }\n  }\n\n  return {\n    showLoader,\n    hideLoader,\n    showModal,\n    hideModal,\n  };\n})();\n\ndocument.addEventListener('DOMContentLoaded', function () {});\n"],"names":["$bpxeT","parcelRequire","$40873ecf3c18e122$var$BASE_URL","$40873ecf3c18e122$var$API_KEY","movieModal","document","getElementById","closeModalBtn","modalContent","loaderContainer","fetchMovieDataFromAPI","movieId","_fetchMovieDataFromAPI","apply","this","arguments","$parcel$interopDefault","$2TvXO","mark","_callee","apiEndpoint","response","data","concat","fetch","_ctx","sent","ok","Error","json","t0","message","showLoader","style","display","hideLoader","showModal","content","innerHTML","appendChild","hideModal","_openModal","event1","targetMovieLink","movieData","btnWatch","btnQueue","dataLoad","preventDefault","target","nodeName","id","console","log","createElement","poster_path","title","vote_average","padStart","popularity","genres","map","param","name","join","trim","overview","querySelector","dataQueued","dataWatched","localStorage","getItem","setItem","JSON","stringify","addEventListener","event","push","currentTarget","dataset","watch","queue","error","window","key"],"version":3,"file":"index.14da1411.js.map"}