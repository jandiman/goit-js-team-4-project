{"mappings":"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","sources":["src/js/modal.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'df3d71dc2c14b1899746da6d2afcfb5b';\n\nconst modalModule = (function () {\n  const movieModal = document.getElementById('movieModal');\n  const closeModalBtn = document.getElementById('closeModalBtn');\n  const modalContent = document.getElementById('modalContent');\n  const loaderContainer = document.getElementById('loaderContainer');\n  const contentEl = document.getElementById('content');\n\n  contentEl.addEventListener('click', openModal);\n\n  async function fetchMovieDataFromAPI(movieId) {\n    const apiEndpoint = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n\n    try {\n      const response = await fetch(apiEndpoint);\n\n      if (!response.ok) {\n        throw new Error(`Failed to fetch movie data for ID ${movieId}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      throw new Error(`Error fetching movie data: ${error.message}`);\n    }\n  }\n\n  function showLoader() {\n    loaderContainer.style.display = 'flex';\n  }\n\n  function hideLoader() {\n    loaderContainer.style.display = 'none';\n  }\n\n  function showModal(content) {\n    hideLoader();\n    modalContent.innerHTML = '';\n    modalContent.appendChild(content);\n    movieModal.style.display = 'block';\n  }\n\n  function hideModal() {\n    movieModal.style.display = 'none';\n  }\n\n  closeModalBtn.addEventListener('click', hideModal);\n\n  window.addEventListener('click', function (event) {\n    if (event.target === movieModal) {\n      hideModal();\n    }\n  });\n\n  window.addEventListener('keydown', function (event) {\n    if (event.key === 'Escape') {\n      hideModal();\n    }\n  });\n\n  async function openModal(event) {\n    event.preventDefault();\n\n    if (event.target.nodeName === 'IMG') {\n      showLoader();\n\n      const targetMovieLink = event.target.id;\n      console.log(targetMovieLink);\n      if (targetMovieLink) {\n        const movieId = targetMovieLink;\n\n        if (movieId) {\n          try {\n            const movieData = await fetchMovieDataFromAPI(movieId);\n            const content = document.createElement('div');\n            content.innerHTML = `<div class=\"modal-popup\">\n            <div class=\"movie-poster\">\n            <img src=\"${\n            movieData.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movieData.poster_path}`\n              : 'https://static.wikia.nocookie.net/ideas/images/6/66/FoxAndroidTM2%27s_No_Poster.jpg'\n              }\" alt=\"${movieData.title}\" class=\"modal-poster\" />\n            </div>\n            <div class=\"movie-details\">\n              <h2 class=\"title main-title\"><a href=\"${movieData.homepage}\" target=\"_target\" class=\"link page\">${movieData.title}</a></h2>\n              <p><span class=\"categ\">Vote / Votes </span><span class=\"val\">${`${movieData.vote_average}`.padStart(0,'0')}</span></p>\n              <p><span class=\"categ\">Popularity</span><span class=\"val\">${  movieData.popularity}</span></p>\n              <p class=\"title\"><span class=\"categ\">Original Title</span><span class=\"val\">${movieData.title}</span></p>\n              <p><span class=\"categ\">Genre:</span><span class=\"genre-list\">${movieData.genres\n                .map(({ name }) => {\n                  return ` ${name}`;\n                })\n                .join(',').trim()}</span></p>\n              \n              <div class=\"abt\">\n              <p>ABOUT</p>\n              <p>${movieData.overview}</p>\n              </div>\n              <div class=\"button-div\">\n                <button class=\"modal-button btn-page\" data-watch=\"${movieData.id}\">ADD TO WATCHED</button>\n                <button class=\"modal-button btn-page\" data-queue=\"${movieData.id}\">ADD TO QUEUE</button>\n              </div>\n              </div>\n              </div>\n            `;\n            showModal(content);\n\n            const btnWatch = document.querySelector('button[data-watch]');\n            const btnQueue = document.querySelector('button[data-queue]');\n            \n\n            if(!localStorage.getItem('SAVED_CURRENT')){\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify({\n                dataQueued:[],\n                dataWatched:[],\n              }));\n              return;\n            }\n            const dataLoad = JSON.parse(localStorage.getItem('SAVED_CURRENT'));\n            dataLoad.dataQueued.map(el => {\n              console.log('element:',el);\n              if(el === movieId){\n                btnQueue.textContent = 'added to Queued';\n                btnQueue.classList.add('active');\n              }\n            })\n            dataLoad.dataWatched.map(el => {\n              console.log('element:',el);\n              if(el === movieId){\n                btnWatch.textContent = 'added to watched';\n                btnWatch.classList.add('active');   \n              }\n            })\n            \n            btnWatch.addEventListener('click',(event)=>{\n              const id = event.currentTarget.dataset.watch;\n              for (const data of dataLoad.dataWatched) {\n                if(data === id){\n                  dataLoad.dataWatched.splice(dataLoad.dataWatched.indexOf(data),1);\n                  event.currentTarget.textContent = 'add to Watched';\n                  event.currentTarget.classList.remove('active');\n                  localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n                  return;\n                }\n              }\n              dataLoad.dataWatched.push(id);\n              event.currentTarget.textContent = 'added to Watched';\n              event.currentTarget.classList.add('active');\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n\n              if(dataLoad.dataPage === 'home'){\n                console.log('HOME PAGE');\n                return;\n              }\n              console.log('LIBRARY PAGE');\n            })\n\n            btnQueue.addEventListener('click',(event)=>{\n              const id = event.currentTarget.dataset.queue;\n              for (const data of dataLoad.dataQueued) {\n                if(data === id){\n                  dataLoad.dataQueued.splice(dataLoad.dataQueued.indexOf(data),1);\n                  event.currentTarget.textContent = 'add to Queued';\n                  event.currentTarget.classList.remove('active');\n                  localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n                  return;\n                }\n              }\n              dataLoad.dataQueued.push(id);\n              event.currentTarget.textContent = 'added to Queued';\n              event.currentTarget.classList.add('active');\n              localStorage.setItem('SAVED_CURRENT',JSON.stringify(dataLoad));\n              \n              if(dataLoad.dataPage === 'home'){\n                console.log('HOME PAGE');\n                return;\n              }\n              console.log('LIBRARY PAGE');\n            });\n          } catch (error) {\n            console.error('Error fetching movie information:', error);\n          } finally {\n            hideLoader();\n          }\n        } else {\n          console.error('Movie ID is undefined.');\n          hideLoader();\n        }\n      }\n    }\n  }\n\n  return {\n    showLoader,\n    hideLoader,\n    showModal,\n    hideModal,\n  };\n})();\n\n"],"names":["movieModal","document","getElementById","closeModalBtn","modalContent","loaderContainer","showLoader","style","display","hideLoader","showModal","content","innerHTML","appendChild","hideModal","addEventListener","async","event1","preventDefault","target","nodeName","targetMovieLink","id","console","log","movieId","movieData","apiEndpoint","response","fetch","ok","Error","json","error","message","fetchMovieDataFromAPI","createElement","poster_path","title","homepage","vote_average","padStart","popularity","genres","map","name","join","trim","overview","btnWatch","querySelector","btnQueue","localStorage","getItem","setItem","JSON","stringify","dataQueued","dataWatched","dataLoad","parse","el","textContent","classList","add","event","currentTarget","dataset","watch","data","splice","indexOf","remove","push","dataPage","queue","window","key"],"version":3,"file":"index.6752b685.js.map"}